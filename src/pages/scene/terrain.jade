extends ./../_layouts/default.jade
block script
  script(type='text/javascript').
    game = Glib
      .createGame({
        canvas: document.getElementById("canvas"),
        autorun: true
      })
      .buildChild({
        name: "Camera",
        templates: ["Camera", "WASD"]
      }, function (entity) {
        entity.getService("Camera").activate();
        entity.getService("Transform").translateXYZ(0, 0, 5);
      })
      .buildChild({
        name: "Light",
        templates: ["DirectionalLight"]
      }, function(e){
        e.getService("Transform").rotateYawPitchRoll(Math.PI / 4, Math.PI/4, 0);
      })
      .buildChild({
        name: "Light",
        templates: ["DirectionalLight"]
      }, function(e){
        e.getService("Transform").rotateYawPitchRoll(Math.PI / 4 * 3, -Math.PI/4, 0);
      });

    function TerrainComponent() {
      this.enable = true;
      this.visible = true;
    }

    TerrainComponent.prototype.setup = function () {
      this.device = this.node.root.getService("Device");
      this.time = this.node.root.getService("Time");
      this.assets = this.node.root.getService("Assets");
      this.transform = this.node.getService("Transform");
      this.renderable = this.node.getService("Renderable");

      var material;
      this.assets
        .load("Material", "/assets/materials/default.json")
        .then(function(m){
          material = m;
        })
        .then(function(){
          return this.assets.load("Image", "/assets/heightmaps/test2.png");
        }.bind(this))
        .then(function (image) {
          this.bttRoot = new Glib.Terrain.BTTRoot(this.device, {
            heightMap: Glib.Terrain.HeightMap.fromImage(image, 512, 512).rescale(0.25),
            materials: [material]
          });
          this.renderable.model = this.bttRoot.model;
        }.bind(this));
    };
    TerrainComponent.prototype.update = function () {
      var terrain = this.bttRoot;
      if (terrain) {
        var position = game.find("/Camera:Transform").position;
        this.bttRoot.updateLod(position);
      }
      //this.transform.setPositionXYZ(-512, -40, -512);
    };

    game.buildChild({
      name: "Terrain",
      templates: ["Model"]
    }, function (entity) {
      entity.addComponent(new TerrainComponent());
    });

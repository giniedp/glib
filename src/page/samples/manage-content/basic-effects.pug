//- title: Basic Effects
//- weight: 4
extends ./../../_layouts/example
block script
  a(name="HTML")
  viewcode
  
  a(name="JS")
  script(type='text/javascript').

    var device = new Glib.Graphics.Device({
      canvas: document.getElementById('canvas')
    });
    var content = new Glib.Content.Manager(device);

    var sphere = Glib.Graphics.Geometry.Builder.begin({
      layout: 'PositionTextureNormalTangentBitangent'
    }).append('Cube', {
      steps: 32
    }).endMesh(device);
    
    var effect;
    content.load("Material", "/assets/materials/default.json").then(function(result) {
      effect = result;
    });

    var tweaks = {
      lightRotation: 0.0,
      lightIntensity: 1.5,
      camX: 0.1,
      specularPower: 0.1
    }

    ui(function(gui) {
      gui.add(tweaks, "camX", -1, 1).step(0.01);
      gui.add(tweaks, "lightRotation", -1, 1).step(0.01);
      gui.add(tweaks, "lightIntensity", 0, 5).step(0.01);
      gui.add(tweaks, "specularPower", 0, 1);
    });

    var world = Glib.Mat4.identity();
    var view = Glib.Mat4.identity();
    var proj = Glib.Mat4.identity();
    var cam = Glib.Mat4.identity();

    var time = 0;
    Glib.utils.loop(function(dt) {
      time += dt;
      let pulse = 2*Math.PI*time;

      device.resize();
      device.cullState = Glib.Graphics.CullState.CullCounterClockWise;
      device.depthState = Glib.Graphics.DepthState.Default;
      device.blendState = Glib.Graphics.BlendState.Opaque;
      device.clear(Glib.Color.CornflowerBlue, 1.0);
      
      cam.initTranslation(tweaks.camX, 0, 1.1);
      Glib.Mat4.invert(cam, view);
      proj.initPerspectiveFieldOfView(Math.PI/2, device.drawingBufferAspectRatio, 0.1, 1000);

      if (!effect) return;
      var params = effect.parameters;

      params.World = world;
      params.View = view;
      params.Projection = proj;
      params.CameraPosition = cam.getTranslation();
      params.SpecularPower = tweaks.specularPower;

      params.Lights0Color = [1, 1, 1, tweaks.lightIntensity];
      params.Lights0Direction = [-tweaks.lightRotation, -0.25, -1, 1];
      params.Lights0Misc = [
        1000, // point light range 
        0, 
        0, 
        1     // 1:dir light 2:point light
      ];
      
      effect.drawMesh(sphere);

    });

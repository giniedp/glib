//- title: Basic
//- weight: 1
extends ./../../_layouts/example
block script
  a(name="JS")
  script(type='text/javascript').
    Glib.Content.Pipeline.preloader('Effect', function(context) {
      // redirect the download path for basicEffect
      if (context.path === 'basicEffect') {
        context.sourceType = '.glfx'
        context.path = '/assets/shader/basicTextured.glfx'
      }
    });

    function DemoComponent(options) {
      options = options || {};
      this.index = options.index || 0;
      this.enable = true;
      this.visible = true;
    }
    DemoComponent.prototype.setup = function () {
      this.node.getServices({
        time: "root:Time",
        assets: "root:Assets",
        transform: "Transform",
        renderable: "Renderable"        
      }, this);
      this.assets.load("Model", "/assets/models/roundcube.obj").then(function (model) {
        this.renderable.model = model;
      }.bind(this));
    };
    DemoComponent.prototype.update = function (time) {
      //this.transform.setRotationXYZAngle(0, 1, 0, -Math.PI / 2);
      //return;
      var s = this.index / totalItems;
      var t = (s + this.time.totalMsInGame / 3000) * Math.PI * 2;
      var x = Math.sin(s * Math.PI * 2) * 5;
      var y = Math.cos(s * Math.PI * 2) * 5;

      this.transform.setPositionXYZ(x, y, Math.sin(t) * 2 - 10);
      this.transform.setScaleUniform(0.75 + Math.sin(t) * 0.25);
      this.transform.setRotationXYZAngle(0, 1, 0, t);
    };

    var game = Glib
      .createGame({
        canvas: document.getElementById("canvas"),
        autorun: true
      })
      .buildChild({
        name: "Camera",
        templates: ["Camera", "WASD"]
      }, function (entity) {
        entity.s.Camera.activate();
        entity.s.Transform.translateXYZ(0, 0, 5);
      })
      .buildChild({
        name: "Light",
        templates: ["DirectionalLight"]
      });
      
    var totalItems = 12;
    for (var i = 1; i <= totalItems; i++) {
      game.buildChild({
        name: "Model" + i,
        templates: ["Model"]
      }, function (entity) {
        entity.addComponent(new DemoComponent({index: i}));
      });
    }

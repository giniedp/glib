//- title: Buffer
extends ./../../_layouts/example.jade
block script
  script#vertex-shader(type='text/glsl').
    precision highp float;
    precision highp int;

    // @binding position
    attribute vec3 vPosition;

    // @binding color
    attribute vec3 vColor;

    varying vec3 vertexColor;
    void main(void) {
      vertexColor = vColor;
      gl_Position = vec4(vPosition, 1.0);
    }
  script#fragment-shader(type='text/glsl').
    precision highp float;
    precision highp int;
    varying vec3 vertexColor;
    void main(void) {
      gl_FragColor = vec4(vertexColor.rgb, 1.0);
    }
  script(type='text/javascript').
    var device = new Glib.Graphics.Device({canvas: 'canvas'});
    var program = device.createProgram({
      vertexShader: document.getElementById('vertex-shader').textContent,
      fragmentShader: document.getElementById('fragment-shader').textContent
    });
    var indices = device.createIndexBuffer({
      dataType: "ushort",
      data: [0, 1, 2]
    });
    var vertices = device.createVertexBuffer({
      layout: {
        position: { type: "float", offset:  0, elements: 3 },
        color   : { type: "float", offset: 12, elements: 3 }
      },
      dataType: "float",
      data: [
        -1.0, -1.0, 0.0, 1, 0, 0,
         1.0, -1.0, 0.0, 0, 1, 0,
         0.0,  1.0, 0.0, 0, 0, 1
      ]
    });
    Glib.utils.loop(function () {
      device.indexBuffer = indices;
      device.vertexBuffer = vertices;
      device.program = program;
      device.clear(Glib.Graphics.Color.CornflowerBlue);
      device.drawIndexedPrimitives();
    });

extends ./../../_layouts/example.jade
block script
  script(type='text/javascript').

    function TerrainComponent() {
      this.enable = true;
      this.visible = true;
    }

    TerrainComponent.prototype.setup = function () {
      this.device = this.node.root.getService("Device");
      this.time = this.node.root.getService("Time");
      this.assets = this.node.root.getService("Assets");
      this.transform = this.node.getService("Transform");
      this.renderable = this.node.getService("Renderable");

      var self = this;
      Glib.Promise.all([
        this.assets.load("Material", "/assets/materials/default.json"),
        this.assets.load("Image", "/assets/heightmaps/test2.png")  
      ]).then(function(res) {
        var material = res[0];
        var image = res[1];
        self.bttRoot = new Glib.Terrain.BTTRoot(self.device, {
          heightMap: Glib.Terrain.HeightMap.fromImage(image, 512, 512).rescale(0.25),
          materials: [material]
        });
        self.renderable.model = self.bttRoot.model;
      })
    };
    TerrainComponent.prototype.update = function () {
      var terrain = this.bttRoot;
      if (terrain) {
        var position = game.find("/Camera:Transform").position;
        this.bttRoot.updateLod(position);
      }
      //this.transform.setPositionXYZ(-512, -40, -512);
    };

    var game = Glib
      .createGame({
        canvas: document.getElementById("canvas"),
        autorun: true
      })
      .buildChild({
        name: "Camera",
        templates: ["Camera", "WASD"]
      }, function (entity) {
        entity.getService("Camera").activate();
        entity.getService("Transform").translateXYZ(256, 128, 512);
      })
      .buildChild({
        name: "Light",
        templates: ["DirectionalLight"]
      }, function(e){
        e.getService("Transform").rotateYawPitchRoll(Math.PI / 4, Math.PI/4, 0);
      })
      .buildChild({
        name: "Light",
        templates: ["DirectionalLight"]
      }, function(e){
        e.getService("Transform").rotateYawPitchRoll(Math.PI / 4 * 3, -Math.PI/4, 0);
      })
      .buildChild({
        name: "Terrain",
        templates: ["Model"]
      }, function (entity) {
        entity.addComponent(new TerrainComponent());
      });

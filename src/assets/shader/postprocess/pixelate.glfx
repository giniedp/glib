program:
  #include <./_postprocess.glsl>

  // @default 0
  uniform float vOffset;

  // @default 4
  uniform float pixelWidth;

  // @default 4
  uniform float pixelHeight;

technique:
  pass:
    vertexShader: |
      void main(void) {
        texCoord = texture;
        gl_Position = vec4(position, 1.0);
      }

    fragmentShader: |
      void main() {
        vec2 uv = texCoord;
        if (uv.x >= vOffset) {
          float dx = pixelWidth / targetWidth;
          float dy = pixelHeight / targetHeight;
          uv = vec2(dx * floor(uv.x / dx), dy * floor(uv.y / dy));
        }
        gl_FragColor = vec4(texture2D(textureSampler, uv).rgb, 1);
      }

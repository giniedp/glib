program:
  precision highp float;
  precision highp int;

  uniform sampler2D texture; // 0
  uniform float vx_offset;
  uniform float rt_w; // GeeXLab built-in
  uniform float rt_h; // GeeXLab built-in
  uniform float pixelSizeX; // 15.0
  uniform float pixelSizeY; // 10.0

technique:
  pass:
    name: 'pixelate'
    vertexShader:
      void main(void)
      {
        gl_Position = ftransform();
        gl_TexCoord[0] = gl_MultiTexCoord0;
      }

    pixelShader:
      void main()
      {
        vec2 uv = gl_TexCoord[0].xy;

        vec3 tc = vec3(1.0, 0.0, 0.0);
        if (uv.x < (vx_offset-0.005))
        {
          float dx = pixelSizeX*(1.0f/rt_w);
          float dy = pixelSizeY*(1.0f/rt_h);
          vec2 coord = vec2(dx*floor(uv.x/dx), dy*floor(uv.y/dy));
          tc = texture2D(texture, coord).rgb;
        }
        else if (uv.x>=(vx_offset+0.005))
        {
          tc = texture2D(texture, uv).rgb;
        }
          gl_FragColor = vec4(tc, 1.0);
      }
program:
  precision highp float;
  precision highp int;

  #include <lighting.h>
  #include <common.h>

  varying vec3 Position;
  varying vec2 TexCoord;
  varying vec3 Normal;

  // @binding position
  attribute vec3 vertexPosition;

  // @binding normal
  attribute vec3 vertexNormal;

  // @binding texture
  attribute vec2 vertexUV;

technique:
  name: "textured"
  pass:
    vertexShader:
      void main(void) {
        vec4 pos = worldMat4 * vec4(vertexPosition, 1.0);

        Position = pos.xyz;
        TexCoord = vertexUV;
        Normal = mat3(worldMat4) * vertexNormal;

        gl_Position = projMat4 * viewMat4 * pos;
      }
    fragmentShader:
      void main(void) {
        vec3 color = texture2D(diffuseTex, TexCoord).rgb * diffuse;
        gl_FragColor = vec4(color, alpha);
      }
technique:
  name: "colored"
  pass:
    vertexShader:
      void main(void) {
        vec4 pos = worldMat4 * vec4(vertexPosition, 1.0);

        Position = pos.xyz;
        TexCoord = vertexUV;
        Normal = mat3(worldMat4) * vertexNormal;

        gl_Position = projMat4 * viewMat4 * pos;
      }
    fragmentShader:
      void main(void) {
        gl_FragColor = vec4(diffuse, alpha);
      }

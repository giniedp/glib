---
title: Shader Multi Texture
weight: 12
group: graphics
files:
  - index.ts
  - index.html
---
extends /_layouts/_example
block append script
  script(type='text/javascript' src='./index.js')
block prepend script
  script#vertex-shader(type='text/glsl').
    precision highp float;

    // @binding position
    attribute vec3 vPosition;
    // @binding texture
    attribute vec2 vTexture;

    // @binding world
    uniform mat4 uWorld;
    // @binding view
    uniform mat4 uView;
    // @binding projection
    uniform mat4 uProjection;

    // data for fragment stage
    varying vec2 texCoord;

    void main(void) {
      texCoord = vTexture;
      gl_Position = uProjection * uView * uWorld * vec4(vPosition, 1.0);
    }

  script#fragment-shader(type='text/glsl').
    precision highp float;

    // @binding texture1
    // @filter PointClamp
    uniform sampler2D uTexture1;
    // @binding texture2
    // @filter PointClamp
    uniform sampler2D uTexture2;
    // @binding texture3
    // @filter PointClamp
    uniform sampler2D uTexture3;
    // @binding texture4
    // @filter PointClamp
    uniform sampler2D uTexture4;


    // data from vertex stage
    varying vec2 texCoord;

    void main(void) {
      vec4 color = vec4(0.0);
      if (texCoord.x < 0.5) {
        if (texCoord.y < 0.5) {
          color.rgb = texture2D(uTexture1, mod(texCoord, 0.5) / 0.5).rgb;
        } else {
          color.rgb = texture2D(uTexture2, mod(texCoord, 0.5) / 0.5).rgb;
        }
      } else {
        if (texCoord.y < 0.5) {
          color.rgb = texture2D(uTexture3, mod(texCoord, 0.5) / 0.5).rgb;
        } else {
          color.rgb = texture2D(uTexture4, mod(texCoord, 0.5) / 0.5).rgb;
        }
      }
      color.a = 1.0;
      gl_FragColor = color;
    }
